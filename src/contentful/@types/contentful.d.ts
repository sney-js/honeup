// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from "contentful";
import { Document } from "@contentful/rich-text-types";

export interface IAccordionFields {
    /** Name */
    name?: string | undefined;

    /** Id */
    id?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: Document | undefined;

    /** Items */
    items?: (IAccordionItem)[] | undefined;
}

export interface IAccordion extends Entry<IAccordionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "accordion";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IAccordionItemFields {
    /** Name */
    name?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Content */
    content?: Document | undefined;

    /** Links */
    links?: (ILink)[] | undefined;
}

export interface IAccordionItem extends Entry<IAccordionItemFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "accordionItem";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ICarouselFields {
    /** Name */
    name?: string | undefined;

    /** Items */
    items?: (ICarouselCard)[] | undefined;
}

export interface ICarousel extends Entry<ICarouselFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "carousel";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ICarouselCardFields {
    /** Name */
    name?: string | undefined;

    /** Type */
    type?: "Default" | "Image Card" | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Description */
    description?: string | undefined;

    /** Notice */
    notice?: string | undefined;

    /** Button */
    button?: ILink | undefined;

    /** Secondary Button */
    secondaryButton?: ILink | undefined;

    /** Image */
    image?: Asset | undefined;

    /** Logo */
    logo?: Asset | undefined;
}

export interface ICarouselCard extends Entry<ICarouselCardFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "carouselCard";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ICookieBannerFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Content */
    content?: Document | undefined;

    /** Set Analytics Cookie */
    setAnalyticsCookie?: boolean | undefined;

    /** Set Tracking Cookie */
    setTrackingCookie?: boolean | undefined;
}

export interface ICookieBanner extends Entry<ICookieBannerFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "cookieBanner";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ICtaComponentFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Image */
    image?: Asset | undefined;

    /** Button */
    button?: ILink | undefined;
}

/** A CTA component comprised of caption, title, image and button. */
export interface ICtaComponent extends Entry<ICtaComponentFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "ctaComponent";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IDeploymentFields {
    /** Name */
    name?: string | undefined;

    /** Project key */
    projectKey: string;

    /** Deploy */
    deploy?: Record<string, any> | undefined;
}

/** Bamboo deployment content type. */
export interface IDeployment extends Entry<IDeploymentFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "deployment";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFlexibleCardFields {
    /** Name */
    name?: string | undefined;

    /** Theme */
    theme?: "yellow" | "blue" | "purple" | "white" | undefined;

    /** Image */
    image?: Asset | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Description */
    description?: string | undefined;

    /** Notice */
    notice?: string | undefined;

    /** Button */
    button?: ILink | undefined;

    /** Secondary Button */
    secondaryButton?: ILink | undefined;
}

export interface IFlexibleCard extends Entry<IFlexibleCardFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "flexibleCard";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFooterFields {
    /** Name */
    name?: string | undefined;

    /** Icon Link */
    iconLink?: ILink | undefined;

    /** Title */
    title?: string | undefined;

    /** Links */
    links?: (ILink)[] | undefined;

    /** Login Label */
    loginLabel?: string | undefined;

    /** Logout Label */
    logoutLabel?: string | undefined;

    /** Additional Links */
    additionalLinks?: (ILink)[] | undefined;

    /** Copyright */
    copyright?: string | undefined;
}

export interface IFooter extends Entry<IFooterFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "footer";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormAccountAddressFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Text */
    step1Text: IFormText;

    /** Input: Zip code */
    inputZipCode: IFormInput;

    /** Input: Street */
    inputStreet: IFormInput;

    /** Input: House number */
    inputHouseNumber: IFormInput;

    /** Input: Floor */
    inputFloor: IFormInput;

    /** Input: City */
    inputCity: IFormInput;
}

/** Form for managing Registration of Virtual cards. */
export interface IFormAccountAddress extends Entry<IFormAccountAddressFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formAccountAddress";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormAccountDetailsFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Text */
    step1Text: IFormText;

    /** Input: First name */
    inputFirstName: IFormInput;

    /** Input: Middle name */
    inputMiddleName: IFormInput;

    /** Input: Last name */
    inputLastName: IFormInput;

    /** Radio: Male */
    inputMale: IFormInput;

    /** Radio: Female */
    inputFemale: IFormInput;

    /** Input: Email */
    inputEmail: IFormInput;

    /** Input: Date of birth */
    inputDOB: IFormInput;

    /** Input: Phone */
    inputPhone?: IFormInput | undefined;
}

/** Form for managing Personal Details of user's account. */
export interface IFormAccountDetails extends Entry<IFormAccountDetailsFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formAccountDetails";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormAccountPasswordFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Text */
    step1Text: IFormText;

    /** Input: Current password */
    inputCurrentPassword: IFormInput;

    /** Input: New Password */
    inputNewPassword: IFormInput;
}

/** Form for managing Password of user's account. */
export interface IFormAccountPassword extends Entry<IFormAccountPasswordFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formAccountPassword";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormAccountPreferencesFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Text */
    step1Text: IFormText;

    /** Input: Newsletter */
    inputEmailOffers: IFormInput;
}

/** Form for managing Preferences of user's account. */
export interface IFormAccountPreferences extends Entry<IFormAccountPreferencesFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formAccountPreferences";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormCookieSettingsFields {
    /** Name */
    name?: string | undefined;

    /** Text */
    text: IFormText;

    /** Input: Analytics Cookie */
    inputAnalyticsCookie?: IFormInput | undefined;

    /** Input: Tracking Cookie */
    inputTrackingCookie?: IFormInput | undefined;
}

export interface IFormCookieSettings extends Entry<IFormCookieSettingsFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formCookieSettings";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormElementsErrorsFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: (string)[] | undefined;

    /** Generic Error */
    genericError: string;

    /** Unreachable Error */
    unreachableError: string;
}

export interface IFormElementsErrors extends Entry<IFormElementsErrorsFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formElementsErrors";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormForgotPasswordFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Text */
    text: IFormText;

    /** Input: Card Number */
    cardNumber: IFormInput;

    /** Input: Email */
    email: IFormInput;

    /** Redirect Url */
    redirectUrl: ILink;
}

export interface IFormForgotPassword extends Entry<IFormForgotPasswordFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formForgotPassword";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormInputFields {
    /** Name */
    name?: string | undefined;

    /** Label */
    label: string;

    /** Description */
    description?: string | undefined;

    /** Input Formatting */
    inputFormatting?: string | undefined;

    /** Error: Empty */
    errorEmpty?: string | undefined;

    /** Error: Invalid */
    errorInvalid?: string | undefined;

    /** Error: Error Codes */
    errorCodes?: (string)[] | undefined;

    /** Disabled */
    disabled?: boolean | undefined;
}

export interface IFormInput extends Entry<IFormInputFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formInput";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormResetPasswordFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Text */
    text: IFormText;

    /** Input: New Password */
    newPassword: IFormInput;

    /** Token Invalid Component */
    tokenInvalidComponent?: ITextCard | undefined;
}

export interface IFormResetPassword extends Entry<IFormResetPasswordFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formResetPassword";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IFormTextFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Description */
    description?: Document | undefined;

    /** Primary Button Text */
    primaryButtonText?: string | undefined;

    /** Secondary Button Text */
    secondaryButtonText?: string | undefined;

    /** Secondary Button Link */
    secondaryButton?: ILink | undefined;

    /** Footnote */
    footnote?: Document | undefined;
}

/** Contains text information for form */
export interface IFormText extends Entry<IFormTextFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "formText";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IHeaderFields {
    /** Name */
    name?: string | undefined;

    /** Login Label */
    loginLabel?: string | undefined;

    /** Logout Label */
    logoutLabel?: string | undefined;

    /** Logged In User Indicator */
    loggedInUserIndicator?: string | undefined;

    /** Navigation */
    navigation?: (ILink)[] | undefined;

    /** Additional Links */
    additionalLinks?: (ILink)[] | undefined;

    /** Serviceline Link */
    servicelineLink?: ILink | undefined;

    /** Serviceline Title */
    servicelineTitle?: string | undefined;

    /** Serviceline Description */
    servicelineDescription?: string | undefined;

    /** Login Form */
    loginForm?: ILogin | undefined;

    /** Logged In User Link */
    loggedInUserLink?: ILink | undefined;
}

export interface IHeader extends Entry<IHeaderFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "header";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IHeroFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Description */
    description?: string | undefined;

    /** Notice */
    notice?: Document | undefined;

    /** Button */
    button?: ILink | undefined;

    /** Image */
    image?: Asset | undefined;

    /** Show When */
    forLoggedIn?: boolean | undefined;

    /** Show Balance For Logged In User */
    showBalance?: boolean | undefined;

    /** Balance Label */
    balanceLabel?: string | undefined;

    /** Show Barcode For Logged In User */
    showBarcode?: boolean | undefined;
}

export interface IHero extends Entry<IHeroFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "hero";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ILinkFields {
    /** Name */
    name?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Internal Link */
    internalLink?: IPage | undefined;

    /** Direct Link */
    externalLink?: string | undefined;

    /** Anchor Id */
    anchorId?: string | undefined;

    /** Is New Tab */
    isNewTab?: boolean | undefined;

    /** Associated Icon */
    associatedIcon?: "Contact" | "Question" | "Newsletter" | undefined;
}

/** Link for external or internal resources for our app */
export interface ILink extends Entry<ILinkFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "link";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IListFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: Document | undefined;

    /** Items */
    items?: (ILink)[] | undefined;
}

export interface IList extends Entry<IListFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "list";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ILoginFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Text */
    text: IFormText;

    /** Input: Card Number */
    cardNumber: IFormInput;

    /** Input: Password */
    inputPassword: IFormInput;

    /** Checkbox: Remember Me */
    checkboxRememberMe?: IFormInput | undefined;
}

export interface ILogin extends Entry<ILoginFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "login";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IMetaDataFields {
    /** Title */
    title?: string | undefined;

    /** Description */
    description?: string | undefined;

    /** Keywords */
    keywords?: (string)[] | undefined;

    /** Image */
    image?: Asset | undefined;
}

/** Add custom page meta data values. */
export interface IMetaData extends Entry<IMetaDataFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "metaData";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IOffersFields {
    /** Name */
    name?: string | undefined;

    /** Not Logged In Card */
    notLoggedInCard?: ICtaComponent | IFlexibleCard | undefined;

    /** Placeholder Image */
    placeholderImage?: Asset | undefined;

    /** Valid In Label */
    validInLabel?: string | undefined;

    /** Valid For Label */
    validForLabel?: string | undefined;

    /** Active Label */
    activeLabel?: string | undefined;

    /** Activate Button Label */
    activateButtonLabel?: string | undefined;

    /** Back Button Label */
    backButtonLabel?: string | undefined;

    /** Flip Card Button Label */
    flipCardButtonLabel?: string | undefined;

    /** Campaign Names */
    campaignNames?: (string)[] | undefined;
}

export interface IOffers extends Entry<IOffersFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "offers";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IPageFields {
    /** Page name */
    title: string;

    /** Header */
    header?: IHeader | undefined;

    /** Footer */
    footer?: IFooter | undefined;

    /** Content */
    content?:
        | (
              | IAccordion
              | ICarousel
              | ICtaComponent
              | IFlexibleCard
              | IFormAccountAddress
              | IFormAccountDetails
              | IFormAccountPassword
              | IFormAccountPreferences
              | IFormCookieSettings
              | IFormForgotPassword
              | ILogin
              | IRegistrationFormPhysical
              | IRegistrationFormVirtual
              | IFormResetPassword
              | IHero
              | IList
              | IOffers
              | IPartnersCard
              | ISprintSparen
              | ITextCard
              | ITransactionHistory
              | ITutorial
              | IWrapperComponent)[]
        | undefined;

    /** Parent Page */
    parentPage?: IPage | undefined;

    /** Theme */
    theme?: "yellow" | "white" | "blue" | undefined;

    /** Filled Background */
    filledBackground?: boolean | undefined;

    /** Meta Data */
    metaData?: IMetaData | undefined;

    /** Page slug */
    name: string;

    /** Require Authorization */
    requireAuthorization?: boolean | undefined;

    /** Cookie Banner */
    cookieBanner?: ICookieBanner | undefined;
}

/** A page identifier.  Use this to build a webpage of content that can appear in site navigations. */
export interface IPage extends Entry<IPageFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "page";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IPartnersCardFields {
    /** Name */
    name?: string | undefined;

    /** Image */
    image?: Asset | undefined;

    /** Logo */
    logo?: Asset | undefined;

    /** Logos Image */
    logosImage?: Asset | undefined;

    /** Title */
    title?: string | undefined;

    /** Description */
    description?: string | undefined;

    /** Button */
    button?: ILink | undefined;
}

export interface IPartnersCard extends Entry<IPartnersCardFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "partnersCard";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IRegistrationFormPhysicalFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Step 1 Text */
    step1Text: IFormText;

    /** Input: Card id */
    inputCardId: IFormInput;

    /** Input: Activation Code */
    inputActivationCode: IFormInput;

    /** Step 2 Text */
    step2Text: IFormText;

    /** Input: First name */
    inputFirstName: IFormInput;

    /** Input: Middle name */
    inputMiddleName: IFormInput;

    /** Input: Last name */
    inputLastName: IFormInput;

    /** Input: Zip code */
    inputZipCode: IFormInput;

    /** Input: House number */
    inputHouseNumber: IFormInput;

    /** Input: Street */
    inputStreet: IFormInput;

    /** Input: City */
    inputCity: IFormInput;

    /** Step 3 Text */
    step3Text: IFormText;

    /** Input: Date of birth */
    inputDOB?: IFormInput | undefined;

    /** Input: Email */
    inputEmail: IFormInput;

    /** Input: Password */
    inputPassword: IFormInput;

    /** Input: ExtraOffers */
    inputExtraOffers: IFormInput;
}

/** Two types of form for managing registrations. */
export interface IRegistrationFormPhysical extends Entry<IRegistrationFormPhysicalFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "registrationFormPhysical";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IRegistrationFormVirtualFields {
    /** Name */
    name?: string | undefined;

    /** Error Codes */
    errorCodes?: IFormElementsErrors | undefined;

    /** On Success */
    onSuccess?: ILink | undefined;

    /** Step 1 Text */
    step1Text: IFormText;

    /** Input: First name */
    inputFirstName: IFormInput;

    /** Input: Middle name */
    inputMiddleName: IFormInput;

    /** Input: Last name */
    inputLastName: IFormInput;

    /** Input: Zip code */
    inputZipCode: IFormInput;

    /** Input: House number */
    inputHouseNumber: IFormInput;

    /** Input: Street */
    inputStreet: IFormInput;

    /** Input: City */
    inputCity: IFormInput;

    /** Step 2 Text */
    step2Text: IFormText;

    /** Input: Date of birth */
    inputDOB?: IFormInput | undefined;

    /** Input: Email */
    inputEmail: IFormInput;

    /** Input: Password */
    inputPassword: IFormInput;

    /** Input: Extra Offers */
    inputExtraOffers: IFormInput;
}

/** Form for managing Registration of Virtual cards. */
export interface IRegistrationFormVirtual extends Entry<IRegistrationFormVirtualFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "registrationFormVirtual";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ISprintSparenFields {
    /** Name */
    name?: string | undefined;

    /** Image */
    image?: Asset | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Description */
    description?: string | undefined;

    /** Notice */
    notice?: Document | undefined;

    /** Show More Button Label */
    showMoreButtonLabel?: string | undefined;

    /** Current Multiplier Label */
    currentMultiplierLabel?: string | undefined;

    /** Next Multiplier Label */
    nextMultiplierLabel?: string | undefined;

    /** Button */
    button?: ILink | undefined;

    /** Visible For User */
    forActiveUser?: boolean | undefined;

    /** Table Data */
    tableData?: Record<string, any> | undefined;
}

export interface ISprintSparen extends Entry<ISprintSparenFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "sprintSparen";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ITextCardFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Header */
    header?: Document | undefined;

    /** Header Alignment */
    headerAlignment?: "left" | "right" | "center" | undefined;

    /** Do Not Apply Card Styles */
    doNotApplyCardStyles?: boolean | undefined;

    /** Content */
    content?: Document | undefined;

    /** Show When */
    forLoggedIn?: boolean | undefined;
}

/** Text card is comprised of header and content with multiple options. */
export interface ITextCard extends Entry<ITextCardFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "textCard";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ITransactionHistoryFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Description */
    description?: Document | undefined;

    /** Points Label */
    pointsLabel?: string | undefined;

    /** Data Is Loading Message */
    dataIsLoadingMessage?: string | undefined;

    /** No Data Message */
    noDataMessage?: string | undefined;

    /** Loading Error Message */
    loadingErrorMessage?: string | undefined;
}

export interface ITransactionHistory extends Entry<ITransactionHistoryFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "transactionHistory";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface ITutorialFields {
    /** Name */
    name?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Image */
    image?: Asset | undefined;

    /** Theme */
    theme?: "Yellow" | "Blue" | "Purple" | undefined;

    /** Items */
    items?: (ITextCard)[] | undefined;
}

export interface ITutorial extends Entry<ITutorialFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "tutorial";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

export interface IWrapperComponentFields {
    /** Name */
    name: string;

    /** Content */
    content: (
        | ICtaComponent
        | IFormAccountAddress
        | IFormAccountDetails
        | IFormAccountPassword
        | IFormAccountPreferences
        | IFormCookieSettings
        | IFormForgotPassword
        | ILogin
        | IRegistrationFormPhysical
        | IRegistrationFormVirtual
        | IFormResetPassword
        | ITextCard)[];

    /** Background Style */
    backgroundStyle: "None" | "Yellow" | "White" | "Blue" | "Purple";

    /** Background Position */
    backgroundPosition?: "Fill" | "Top" | "Bottom" | undefined;
}

/** Can wrap 1 or more components with specific design and layout style */
export interface IWrapperComponent extends Entry<IWrapperComponentFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: "wrapperComponent";
                linkType: "ContentType";
                type: "Link";
            };
        };
    };
}

type CONTENT_TYPE =
    | "accordion"
    | "accordionItem"
    | "carousel"
    | "carouselCard"
    | "cookieBanner"
    | "ctaComponent"
    | "deployment"
    | "flexibleCard"
    | "footer"
    | "formAccountAddress"
    | "formAccountDetails"
    | "formAccountPassword"
    | "formAccountPreferences"
    | "formCookieSettings"
    | "formElementsErrors"
    | "formForgotPassword"
    | "formInput"
    | "formResetPassword"
    | "formText"
    | "header"
    | "hero"
    | "link"
    | "list"
    | "login"
    | "metaData"
    | "offers"
    | "page"
    | "partnersCard"
    | "registrationFormPhysical"
    | "registrationFormVirtual"
    | "sprintSparen"
    | "textCard"
    | "transactionHistory"
    | "tutorial"
    | "wrapperComponent";

type LOCALE_CODE = "nl-NL";

type CONTENTFUL_DEFAULT_LOCALE_CODE = "nl-NL";
