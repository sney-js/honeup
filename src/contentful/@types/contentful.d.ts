// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from 'contentful';
import { Document } from '@contentful/rich-text-types';

export interface IArticleFields {
  /** Title */
  title: string;

  /** Description */
  description?: Document | undefined;

  /** Image */
  image?: Asset | undefined;

  /** Content */
  content?: (IImage | IList | IRichText)[] | undefined;

  /** Published Date */
  publishedDate: string;

  /** Keywords */
  keywords?: string[] | undefined;

  /** Parent Page */
  parentPage?: IPage | undefined;

  /** Slug */
  name: string;
}

/** Articles; such as news, blog posts, press releases */

export interface IArticle extends Entry<IArticleFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'article';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IFaqFields {
  /** Title */
  title?: string | undefined;

  /** Text Items */
  textItems?: IRichText[] | undefined;

  /** Slug */
  slug: string;
}

export interface IFaq extends Entry<IFaqFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'faq';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IFooterFields {
  /** Content name */
  name: string;

  /** Links */
  links?: ILink[] | undefined;

  /** Copyright message */
  copyright?: string | undefined;

  /** Slug */
  slug: string;

  /** Social Media Links */
  socialMediaLinks?: Record<string, any> | undefined;
}

/** A grouping of content which sits at the bottom of a page. */

export interface IFooter extends Entry<IFooterFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'footer';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IHeaderFields {
  /** Content name */
  name: string;

  /** Logo */
  logo?: Asset | undefined;

  /** Links */
  links?: ILink[] | undefined;

  /** CTA Link */
  ctaLink?: ILink | undefined;

  /** Logo Link */
  logoLink: ILink;

  /** Slug */
  slug: string;
}

/** A component that contains content that will appear in a header section */

export interface IHeader extends Entry<IHeaderFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'header';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IHeroFields {
  /** Title */
  title?: string | undefined;

  /** Description */
  description?: Document | undefined;

  /** CTA */
  cta?: Entry<{ [fieldId: string]: unknown }> | undefined;

  /** Image */
  image?: Asset | undefined;

  /** Slug */
  slug: string;
}

/** Hero elements with Title, description, CTA, image */

export interface IHero extends Entry<IHeroFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'hero';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IImageFields {
  /** Content name */
  name: string;

  /** Image */
  image: Asset;

  /** Text Block */
  textBlock?: Document | undefined;
}

/** A content wrapper for Images */

export interface IImage extends Entry<IImageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'image';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface ILinkFields {
  /** Name */
  name?: string | undefined;

  /** Title */
  title?: string | undefined;

  /** Internal Link */
  internalLink?: IArticle | IPage | undefined;

  /** Direct Link */
  externalLink?: string | undefined;

  /** Is New Tab */
  isNewTab?: boolean | undefined;
}

/** Link for external or internal resources for our app */

export interface ILink extends Entry<ILinkFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'link';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IListFields {
  /** Content name */
  name: string;

  /** Content items */
  consys?: (IArticle | IPage)[] | undefined;

  /** Identifier */
  identifier: string;
}

/** A wrapper component for listing content.  e.g Articles.
Has functionality to query and display content based on a search query. e.g. Latest 10 Articles */

export interface IList extends Entry<IListFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'list';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IMetaDataFields {
  /** Title */
  title?: string | undefined;

  /** Description */
  description?: string | undefined;

  /** Keywords */
  keywords?: string[] | undefined;

  /** Image */
  image?: Asset | undefined;
}

/** Add custom page meta data values. */

export interface IMetaData extends Entry<IMetaDataFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'metaData';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface INumberedListFields {
  /** Title */
  title?: string | undefined;

  /** Entries Text */
  entriesText?: IRichText[] | undefined;

  /** Entries Icons */
  entriesIcons?: IImage[] | undefined;

  /** Slug */
  slug: string;
}

/** A sequential series of title, description, icon */

export interface INumberedList extends Entry<INumberedListFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'numberedList';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IPageFields {
  /** Page name */
  title: string;

  /** Content */
  content?:
    | (IFaq | IHero | IImage | IList | INumberedList | IRichText | IVideo)[]
    | undefined;

  /** Parent page */
  parentPage?: IArticle | IPage | undefined;

  /** Page image */
  image?: Asset | undefined;

  /** Link to external page */
  url?: string | undefined;

  /** Page meta data */
  metaData?: IMetaData | undefined;

  /** Page slug */
  name: string;
}

/** A page identifier.  Use this to build a webpage of content that can appear in site navigations. */

export interface IPage extends Entry<IPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'page';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export interface IRichTextFields {
  /** Content name */
  name?: string | undefined;

  /** Content */
  content?: Document | undefined;

  /** Title */
  title?: string | undefined;
}

/** A Rich text component with Markdown Editor */

export interface IRichText extends Entry<IRichTextFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: 'rich-text';
        linkType: 'ContentType';
        type: 'Link';
      };
    };
  };
}

export type CONTENT_TYPE =
  | 'article'
  | 'faq'
  | 'footer'
  | 'header'
  | 'hero'
  | 'image'
  | 'link'
  | 'list'
  | 'metaData'
  | 'numberedList'
  | 'page'
  | 'rich-text';

export type LOCALE_CODE = 'en-US';

export type CONTENTFUL_DEFAULT_LOCALE_CODE = 'en-US';
